<Window x:Class="MvvmCmdBinding.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MvvmCmdBinding"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        xmlns:model="clr-namespace:MvvmCmdBinding.Model"
        xmlns:converter="clr-namespace:MvvmCmdBinding.Converter"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        xmlns:viewmodel="clr-namespace:MvvmCmdBinding.ViewModel"
        Name="MVVMWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="500" Width="600">
    <Window.Resources>
        <ObjectDataProvider x:Key="DemoGender" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>               
                <x:Type Type="model:Gender"/>  
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
        <converter:EnumToBoolConverter x:Key="EnumToBool"/>
    </Window.Resources>

    <Window.DataContext>
        <viewmodel:ViewModelMain/>
    </Window.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <cmd:EventToCommand Command="{Binding CmdLoaded}" CommandParameter="{Binding ElementName=MVVMWindow}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseMove">
            <cmd:EventToCommand Command="{Binding CmdMouseMove}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <!--<i:EventTrigger EventName="MouseDown">
            <cmd:EventToCommand Command="{Binding CmdMouseDown}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>-->
    </i:Interaction.Triggers>

    <UniformGrid Rows="2" Columns="3">
        <StackPanel>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown">
                    <cmd:EventToCommand Command="{Binding CmdMouseDown}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel Orientation="Horizontal" Margin="3">
                <Label Content="Binding Text" Width="120"/>
                <TextBox Text="{Binding BindingText}" MinWidth="100" VerticalAlignment="Center"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="3">
                <Label Content="Binding Number" Width="120"/>
                <TextBox x:Name="TextValue" Text="{Binding BindingNumber, StringFormat={}{0:F3}}" MinWidth="100" VerticalAlignment="Center"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="3">
                <Label Content="Binding Control" Width="120"/>
                <TextBox Text="{Binding ElementName=TextValue, Path=Text}" MinWidth="100" VerticalAlignment="Center"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="3">
                <Label Content="Binding Enum" VerticalAlignment="Center" Width="120"/>
                <StackPanel Margin="3">
                    <RadioButton Content="Male" IsChecked="{Binding BindingEnum, Mode=TwoWay, Converter={StaticResource EnumToBool}, ConverterParameter=0}" Margin="3"/>
                    <RadioButton Content="Female" IsChecked="{Binding BindingEnum, Mode=TwoWay, Converter={StaticResource EnumToBool}, ConverterParameter=1}" Margin="3"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="3">
                <Label Content="Binding Converter" Width="120"/>
                <Label Content="IsVisible" VerticalAlignment="Center" Visibility="{Binding ElementName=CheckBoxControl, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"/>
                <CheckBox Name="CheckBoxControl" IsChecked="True" Content="Controller" VerticalAlignment="Center"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="3">
                <Label Content="Mouse Position" Width="120"/>
                <Label Content="{Binding ShowingText}" VerticalAlignment="Center"/>
            </StackPanel>
        </StackPanel>
        <StackPanel Margin="3">
            <DataGrid ItemsSource="{Binding DataList}" AutoGenerateColumns="False" Margin="3">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Number}" Header="Number" Width="*"/>
                    <DataGridTextColumn Binding="{Binding Name}" Header="Name" Width="*"/>
                    <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource DemoGender}}" SelectedValueBinding="{Binding Type}" Header="Gender" Width="*"/>
                    <DataGridCheckBoxColumn Binding="{Binding IsChecked}" Header="IsChecked" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel>
                <Button Content="Cmd without parameter" Margin="3" Command="{Binding CmdWithoutParameter}"/>
                <Button Content="Cmd with parameter" Margin="3" Command="{Binding CmdWithParameter}" CommandParameter="CommandParameter"/>
            </StackPanel>
        </StackPanel>
        <StackPanel Margin="3">
            <ListView ItemsSource="{Binding DataList}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="80" Header="Number" DisplayMemberBinding="{Binding Number}"/>
                        <GridViewColumn Width="100" Header="Name" DisplayMemberBinding="{Binding Name}"/>
                    </GridView>
                </ListView.View>
            </ListView>
        </StackPanel>
        <StackPanel Margin="3">
            <UniformGrid Rows="1" Columns="2" Margin="10">
                <ListBox x:Name="listBox" SelectedIndex="0" Margin="5">
                    <ListBoxItem Content="AAA"/>
                    <ListBoxItem Content="BBB"/>
                    <ListBoxItem Content="CCC"/>
                    <ListBoxItem Content="DDD"/>
                    <ListBoxItem Content="EEE"/>
                    <ListBoxItem Content="FFF"/>
                </ListBox>
                <ListBox SelectedIndex="{Binding ElementName=listBox,Path=SelectedIndex}" Margin="5" ItemsSource="{Binding DataList}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </UniformGrid>
        </StackPanel>
        <StackPanel Margin="3">
            <TreeView Margin="5" ItemsSource="{Binding DataList}">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding DataList}">
                        <TextBlock Text="{Binding Name}"/>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <ComboBox ItemsSource="{Binding Source={StaticResource DemoGender}}" SelectedIndex="0"/>
            <ComboBox ItemsSource="{Binding EnumsDescription}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedValue="{Binding ExampleProperty}"/>
        </StackPanel>
        <Grid Margin="3">
            <TextBlock Text="Right Click Here" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            <Rectangle RadiusX="4" RadiusY="4" Stroke="Magenta" StrokeThickness="2" StrokeDashArray="2,2"/>
            <Border Background="Transparent">
                <Border.ContextMenu>
                    <ContextMenu ItemsSource="{Binding DataList}">
                        <ContextMenu.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding DataList}">
                                <MenuItem Header="{Binding Name}"/>
                            </HierarchicalDataTemplate>
                        </ContextMenu.ItemTemplate>
                    </ContextMenu>
                </Border.ContextMenu>
            </Border>
        </Grid>
    </UniformGrid>
</Window>