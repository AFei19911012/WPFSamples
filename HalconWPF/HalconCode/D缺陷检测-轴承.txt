* **********************************************************
* 轴承检测
* **********************************************************
* 
dev_update_off ()
dev_close_window ()
dev_open_window (0, 0, 648, 486, 'white', WindowHandle)
set_display_font (WindowHandle, 12, 'mono', 'true', 'false')
* dev_set_draw ('margin')
dev_set_line_width (3)
*
list_image_files ('D:/MyPrograms/HalconSamples/images/bearing', 'default', [], ImageFiles)
for I := 1 to |ImageFiles| by 1
    read_image (Image, ImageFiles[I - 1])
    dev_display (Image)
    * 
    * 第一步，识别轴承
    * 尽量减少控制参数
    median_image (Image, ImageMedian, 'circle', 10, 'mirrored') 
    rgb1_to_gray (ImageMedian, GrayImage)
    auto_threshold (GrayImage, Regions, 10)
    area_center (Regions, Area, Row, Column)
    tuple_sort_index (Area, Indices)
    select_obj (Regions, ObjectSelected, Indices[|Area| - 2] + 1)
    fill_up (ObjectSelected, RegionFillUp)
    difference (RegionFillUp, ObjectSelected, RegionsDifference)
    connection (RegionsDifference, Regions)
    *
    * 第二步，识别滚子
    count_obj (Regions, NumberBearing)
    NumberRoller := []
    for Index := 1 to NumberBearing by 1
        select_obj (Regions, ObjectSelected, Index)
        shape_trans (ObjectSelected, RegionTrans, 'convex')
        difference (RegionTrans, ObjectSelected, RegionDifference)
        opening_circle (RegionDifference, RegionOpening, 3)
        connection (RegionOpening, RegionsRollers)
        shape_trans (RegionsRollers, RegionTrans, 'outer_circle')
        area_center (RegionTrans, Area, Row, Column)
        tuple_max (Area, MaxArea)
        select_shape (RegionTrans, RegionsRollers, 'area', 'and', 0.3 * MaxArea, MaxArea + 1)
        count_obj (RegionsRollers, Number)
        dev_display (RegionsRollers)
        NumberRoller := [NumberRoller, Number]
    endfor
    *
    * 第三步，判断异常
    area_center (Regions, Area, Row, Column)
    tuple_mean (NumberRoller, MeanNumber)
    NG := 0
    for Index := 0 to NumberBearing - 1 by 1
        if (NumberRoller[Index] < MeanNumber)
            set_display_font (WindowHandle, 12, 'mono', 'true', 'false')
            dev_disp_text ('NG', 'image', Row[Index]-25, Column[Index]-60, 'black', [], [])
            NG := NG + 1
        endif
    endfor
    if (NG > 0)
        set_display_font (WindowHandle, 100, 'mono', 'true', 'false')
        dev_disp_text ('NG', 'image', 800, 1200, 'red', [], [])
    endif
    stop ()
endfor