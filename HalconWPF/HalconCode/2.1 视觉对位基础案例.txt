dev_close_window ()
dev_set_draw ('margin')
dev_set_line_width (2)
dev_set_color ('orange red')
set_system ('border_shape_models', 'false')
read_image (Image, 'D:/MyPrograms/HalconSamples/20220123/model.bmp')
get_image_size (Image, Width, Height)
dev_open_window (0, 0, Width/2, Height/2, 'black', WindowHandle)
dev_display (Image)
*************** 二维测量 准备工作
* 选择 ROI
gen_rectangle1 (Rectangle1, 470, 270, 530, 330)
gen_rectangle1 (Rectangle2, 270, 470, 330, 530)
union2 (Rectangle1, Rectangle2, ModelRegion)
reduce_domain (Image, ModelRegion, ImageROI)
* 创建形状模板
create_shape_model (ImageROI, 'auto', -0.39, 0.79, 'auto', 'auto', 'use_polarity', 'auto', 'auto', ModelID)
* 获取模板轮廓
get_shape_model_contours (ModelContours, ModelID, 1)
* 参考点 也是模板匹配中心
area_center (ModelRegion, ModelRegionArea, RefRow, RefColumn)
* 匹配模板
* find_shape_model (Image, ModelID, -0.39, 0.79, 0.5, 1, 0.5, 'least_squares', 0, 0.9, RefRow, RefColumn, Angle, Score)
* 模板位置
vector_angle_to_rigid (0, 0, 0, RefRow, RefColumn, 0, HomMat2D)
* 等价
*   hom_mat2d_identity (HomMat2D)
*   hom_mat2d_rotate (HomMat2D, Angle, 0, 0, HomMat2D)
*   hom_mat2d_translate (HomMat2D, Row, Column, HomMat2D)
affine_trans_contour_xld (ModelContours, TransContours, HomMat2D)

dev_display (TransContours)
* 选择 ROI
* dev_get_window(WindowHandle)
* draw_rectangle2(WindowHandle, Row1, Column1, Phi, Length1, Length2)
* draw_ellipse (WindowHandle, Row4, Column4, Phi3, Radius1, Radius2)
* 矩形框尽量在轮廓边缘
Row1 := 500
Column1 := 300
Phi1 := 0
Length11 := 15
Length12 := 15

Row2 := 300
Column2 := 500
Phi2 := 0
Length21 := 15
Length22 := 15

RowBegin := 700
ColumnBegin := 200
RowEnd := 800
ColumnEnd := 200

Row11 := 150
Column11 := 700
Row21 := 500
Column21 := 500
R := 50

Row31 := 600
Column31 := 800
Phi := 0
R1 := 75
R2 := 50

* 创建测量模型
create_metrology_model(MetrologyHandle)
* 设置模型对象图像大小
set_metrology_model_image_size(MetrologyHandle, Width, Height)
* 添加测量模型
add_metrology_object_rectangle2_measure(MetrologyHandle, Row1, Column1, Phi1, Length11, Length12, 20, 3, 1, 30, [], [], Index1)
add_metrology_object_rectangle2_measure(MetrologyHandle, Row2, Column2, Phi2, Length21, Length22, 20, 3, 1, 30, [], [], Index2)
add_metrology_object_line_measure (MetrologyHandle, RowBegin, ColumnBegin, RowEnd, ColumnEnd, 20, 5, 1, 30, [], [], Index3)
add_metrology_object_circle_measure (MetrologyHandle, Row11, Column11, R, 20, 5, 1, 30, [], [], Index4)
add_metrology_object_circle_measure (MetrologyHandle, Row21, Column21, R, 20, 5, 1, 30, [], [], Index5)
add_metrology_object_ellipse_measure (MetrologyHandle, Row31, Column31, Phi, R1, R2, 20, 5, 1, 30, [], [], Index6)
* 设置对象参数
set_metrology_object_param(MetrologyHandle, 'all', 'measure_select', 'first')
set_metrology_object_param(MetrologyHandle, 'all', 'measure_transition', 'negative')
set_metrology_object_param (MetrologyHandle, 'all', 'measure_sigma', 1)
set_metrology_object_param (MetrologyHandle, 'all', 'measure_length1', 20)
* 下面这三个过渡方向不一样
set_metrology_object_param(MetrologyHandle, Index4, 'measure_transition', 'positive')
set_metrology_object_param(MetrologyHandle, Index5, 'measure_transition', 'positive')
set_metrology_object_param(MetrologyHandle, Index6, 'measure_transition', 'positive')
* 设置模型参数
set_metrology_model_param(MetrologyHandle, 'reference_system', [RefRow, RefColumn, 0])
* 对齐测量模板
align_metrology_model(MetrologyHandle, RefRow, RefColumn, 0)
* 应用测量模板
apply_metrology_model(Image, MetrologyHandle)
* 获取所有结果
get_metrology_object_result(MetrologyHandle, Index1, 'all', 'result_type', 'all_param', RectResult1)
get_metrology_object_result(MetrologyHandle, Index2 ,'all', 'result_type', 'all_param', RectResult2)
get_metrology_object_result(MetrologyHandle, Index3 ,'all', 'result_type', 'all_param', RectResult3)
get_metrology_object_result(MetrologyHandle, Index4 ,'all', 'result_type', 'all_param', RectResult4)
get_metrology_object_result(MetrologyHandle, Index5 ,'all', 'result_type', 'all_param', RectResult5)
get_metrology_object_result(MetrologyHandle, Index6 ,'all', 'result_type', 'all_param', RectResult6)
* 获取检测到的轮廓
get_metrology_object_result_contour(Contour1, MetrologyHandle, Index1, 'all', 1.5)
get_metrology_object_result_contour(Contour2, MetrologyHandle, Index2, 'all', 1.5)
get_metrology_object_result_contour(Contour3, MetrologyHandle, Index3, 'all', 1.5)
get_metrology_object_result_contour(Contour4, MetrologyHandle, Index4, 'all', 1.5)
get_metrology_object_result_contour(Contour5, MetrologyHandle, Index5, 'all', 1.5)
get_metrology_object_result_contour(Contour6, MetrologyHandle, Index6, 'all', 1.5)
* 获取测量轮廓
get_metrology_object_measures(Contours, MetrologyHandle, 'all', 'all', Row3, Column3)
* 求两矩形的中心和角度
ObjCenterImgRowRef := 0.5 * (RectResult1[0] + RectResult2[0])
ObjCenterImgColRef := 0.5 * (RectResult1[1] + RectResult2[1])
line_orientation(RectResult1[0], RectResult1[1], RectResult2[0], RectResult2[1], ObjAngleRef)
* angle_lx (RectResult3[0], RectResult3[1], RectResult3[2], RectResult3[3], angleRef)
angle_lx (RectResult4[0], RectResult4[1], RectResult5[0], RectResult5[1], angleRef)
* 保存参考点和角度
write_tuple(ObjCenterImgRowRef, 'ObjectCenterImgRowRefer.tup')
write_tuple(ObjCenterImgColRef, 'ObjectCenterImgColRefer.tup')
write_tuple(ObjAngleRef, 'ObjectAngleRadRefer.tup')
* 保存测量模型
write_metrology_model (MetrologyHandle, 'MetrologyModel.mem')
* 清空模型
clear_metrology_model (MetrologyHandle)

*************** 二维测量 实际应用
* 待测量的图像列表
TestImages := ['D:/MyPrograms/HalconSamples/20220123/model.bmp', 'D:/MyPrograms/HalconSamples/20220123/test_5.bmp', 'D:/MyPrograms/HalconSamples/20220123/test_10.bmp']
for T := 0 to |TestImages| - 1 by 1
  read_image (Image, TestImages[T])
  * 匹配模板
  find_shape_model (Image, ModelID, rad(0), rad(360), 0.5, 1, 0.5, 'least_squares', [6,1], 0.75, Row, Column, Angle, Score)
  * 这个角度差不多就是 10° 模板简单的时候可以用这个角度作为旋转角度
  tuple_deg (Angle, Deg)
  dev_display (Image)
  vector_angle_to_rigid (0, 0, 0, Row, Column, Angle, HomMat2D)
  * 找到的模板位置
  affine_trans_contour_xld (ModelContours, TransContours, HomMat2D)
  dev_display (TransContours)
  * 读取测量模型
  read_metrology_model ('MetrologyModel.mem', MetrologyHandle)
  * 对齐测量模板
  align_metrology_model(MetrologyHandle, Row, Column, Angle)
  * 应用测量模板
  apply_metrology_model(Image, MetrologyHandle)
  * 获取所有结果
  get_metrology_object_result(MetrologyHandle, Index1, 'all', 'result_type', 'all_param', RectResult1)
  get_metrology_object_result(MetrologyHandle, Index2 ,'all', 'result_type', 'all_param', RectResult2)
  get_metrology_object_result(MetrologyHandle, Index3 ,'all', 'result_type', 'all_param', RectResult3)
  get_metrology_object_result(MetrologyHandle, Index4 ,'all', 'result_type', 'all_param', RectResult4)
  get_metrology_object_result(MetrologyHandle, Index5 ,'all', 'result_type', 'all_param', RectResult5)
  get_metrology_object_result(MetrologyHandle, Index6 ,'all', 'result_type', 'all_param', RectResult6)
  * 获取检测到的轮廓
  get_metrology_object_result_contour(Contour1, MetrologyHandle, Index1, 'all', 1.5)
  get_metrology_object_result_contour(Contour2, MetrologyHandle, Index2, 'all', 1.5)
  get_metrology_object_result_contour(Contour3, MetrologyHandle, Index3, 'all', 1.5)
  get_metrology_object_result_contour(Contour4, MetrologyHandle, Index4, 'all', 1.5)
  get_metrology_object_result_contour(Contour5, MetrologyHandle, Index5, 'all', 1.5)
  get_metrology_object_result_contour(Contour6, MetrologyHandle, Index6, 'all', 1.5)
  * 获取测量轮廓
  get_metrology_object_measures(Contours, MetrologyHandle, 'all', 'all', Row3, Column3)
  * 清空模型
  clear_metrology_model (MetrologyHandle)
  * 求两矩形的中心和角度
  ObjCenterImgRow := 0.5 * (RectResult1[0] + RectResult2[0])
  ObjCenterImgCol := 0.5 * (RectResult1[1] + RectResult2[1])
  line_orientation(RectResult1[0], RectResult1[1], RectResult2[0], RectResult2[1], ObjAngle)
*   angle_lx (RectResult3[0], RectResult3[1], RectResult3[2], RectResult3[3], angleObj)
  angle_lx (RectResult4[0], RectResult4[1], RectResult5[0], RectResult5[1], angleObj)
  * 读取参考点和参考角度
  read_tuple('ObjectCenterImgRowRefer.tup', ObjCenterImgRowRef)
  read_tuple('ObjectCenterImgColRefer.tup', ObjCenterImgColRef)
  read_tuple('ObjectAngleRadRefer.tup', ObjAngleRef)
  * 图像 → 实际 九点标定得到
  hom_mat2d_identity(HomMat2D)
  affine_trans_point_2d(HomMat2D, ObjCenterImgColRef, ObjCenterImgRowRef, ObjCenterXRef, ObjCenterYRef)
  affine_trans_point_2d(HomMat2D, ObjCenterImgCol, ObjCenterImgRow, ObjCenterXCur, ObjCenterYCur)
  * 计算夹角  Cur -> Ref 判断是否需要加正负号 机械角度的旋转方向（左手坐标系：顺时针为负 逆时针为正）
  OffsetResultA := -(deg(ObjAngleRef) - deg(ObjAngle))
  dA := -(deg(angleRef) - deg(angleObj))
  * 旋转中心 旋转标定得到
  RotateCenterX := Width / 2
  RotateCenterY := Height / 2
  * 计算旋转后的基准点
  vector_angle_to_rigid(RotateCenterY, RotateCenterX, 0, RotateCenterY, RotateCenterX, rad(OffsetResultA), HomMat2DTrans)
  affine_trans_point_2d(HomMat2DTrans, ObjCenterXCur, ObjCenterYCur, ObjCenterXTra, ObjCenterYTra)
  * 计算 XY 偏移量 Trans -> Ref 判断是否需要加正负号
  OffsetResultX := ObjCenterXRef - ObjCenterXTra
  OffsetResultY := ObjCenterYRef - ObjCenterYTra
  wait_seconds (1)
endfor